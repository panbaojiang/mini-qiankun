name: Build and Deploy
on:
  push:
    branches: [master]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install and Build
        run: |
          npm install
          npm run build
      - name: Build Image
        run: docker build -t ${{ secrets.REGISTRY_URL }}/docker:latest ./
      - name: Login to registry
        run: docker login ${{ secrets.REGISTRY_URL }} --username=${{ secrets.TCR_USERNAME }} --password ${{ secrets.TCR_PASSWORD }}
      - name: Push Image
        run: docker push ${{ secrets.REGISTRY_URL }}/docker:latest
  pull-docker:
    needs: [build]
    name: Pull Docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker stop $(docker ps --filter ancestor=${{ secrets.REGISTRY_URL }}/docker:latest -q)
            docker rm -f $(docker ps -a --filter ancestor=${{ secrets.REGISTRY_URL }}/docker:latest -q)
            docker rmi -f $(docker images ${{ secrets.REGISTRY_URL }}/docker:latest -q)
            docker login ${{ secrets.REGISTRY_URL }} --username=${{ secrets.TCR_USERNAME }} --password ${{ secrets.TCR_PASSWORD }}
            docker pull ${{ secrets.REGISTRY_URL }}/docker:latest
            docker run -d -p 8000:80 ${{ secrets.REGISTRY_URL }}/docker:latest
