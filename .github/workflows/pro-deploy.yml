name: Build and Deploy # 构建和部署

on:
  push: # 当有代码推送到仓库时触发
    branches: [master] # 只在 master 分支推送时触发
  pull_request: # 当有PR时也触发
    branches: [master] # 只在 master 分支创建 PR 时触发

env:
  DOCKER_IMAGE_NAME: qiankun-app # 镜像名称，与腾讯云仓库名称一致
  DOCKER_REGISTRY: ${{ secrets.REGISTRY_URL }} # 镜像仓库

jobs:
  build-and-push: # 构建和推送镜像
    runs-on: ubuntu-latest # 运行环境
    if: github.ref == 'refs/heads/master' # 只在 master 分支推送时触发
    steps:
      - name: Checkout # 检出代码
        uses: actions/checkout@v5

      - name: Set up Docker Buildx # 设置Docker Buildx
        uses: docker/setup-buildx-action@v3 # 使用官方设置Docker Buildx的action
        with:
          driver: docker-container # 使用docker-container驱动

      - name: Login to Tencent Cloud Container Registry # 登录腾讯云容器镜像服务
        uses: docker/login-action@v3 # 使用官方登录Docker Hub的action
        with:
          registry: ${{ secrets.REGISTRY_URL }} # 镜像仓库
          username: ${{ secrets.TCR_USERNAME }} # 用户名
          password: ${{ secrets.TCR_PASSWORD }} # 密码

      - name: Build and push Docker image # 构建和推送Docker镜像
        uses: docker/build-push-action@v5 # 使用官方构建和推送Docker镜像的action
        with:
          context: . # 上下文路径
          file: ./deploy/docker/Dockerfile # 指定Dockerfile文件
          push: true # 推送镜像到仓库
          tags: |
            ${{ secrets.REGISTRY_URL }}:latest
            ${{ secrets.REGISTRY_URL }}:${{ github.sha }}
          cache-from: type=gha # 缓存来源
          cache-to: type=gha,mode=max # 缓存目标
          platforms: linux/amd64 # 平台

  deploy-to-server: # 部署到服务器
    needs: build-and-push # 依赖构建任务
    runs-on: ubuntu-latest # 运行环境
    steps:
      - name: Deploy to Tencent Cloud # 部署到腾讯云
        uses: appleboy/ssh-action@v1.0.3 # 使用appleboy/ssh-action的action
        with:
          host: ${{ secrets.SERVER_HOST }} # 服务器地址
          username: ${{ secrets.SERVER_USERNAME }} # 用户名
          key: ${{ secrets.SERVER_PASSWORD }} # 密码
          port: ${{ secrets.SERVER_PORT }} # 端口
          script: |
            sudo docker pull ${{ secrets.REGISTRY_URL }}:latest 
            sudo docker stop qiankun-app || true 
            sudo docker rm qiankun-app || true 
            sudo docker run -d --name qiankun-app --restart unless-stopped -p 80:80 -v ~/qiankun-deploy/logs:/var/log/nginx ${{ secrets.REGISTRY_URL }}:latest 
            sleep 10 
            if ! curl -f http://localhost/health; then 
              echo "Deployment failed!" 
              sudo docker logs qiankun-app 
              exit 1
            fi
